"use strict";define("TestPlanCommon/RestClient",["require","exports","VSS/Platform/Context","VSS/Platform/RestClientBase","VSS/Platform/Util/Serialization"],(function(e,t,s,n,a){!function(e){t.Test={};class a extends n.RestClientBase{constructor(e){super(e)}async createTestRun(e,t){return this.beginRequest({apiVersion:"5.1-preview.3",method:"POST",routeTemplate:"{project}/_apis/test/Runs/{runId}",routeValues:{project:t},body:e})}async createTestSettings(e,t){return this.beginRequest({apiVersion:"5.1-preview.1",method:"POST",routeTemplate:"{project}/_apis/test/TestSettings/{testSettingsId}",routeValues:{project:t},body:e})}}t.Test.TestClientName="TestHubRefresh-Test-WebPlatform.ITestRestClient",t.Test.getTestClient=function(e,s){return e.getRestClient(t.Test.TestClientName,s)},s.RestClients.add(t.Test.TestClientName,{factory:a,options:{serviceInstanceType:"00025394-6065-48ca-87d9-7f5672854ef7"}})}(),function(e){t.TestPlan={};class i extends n.RestClientBase{constructor(e){super(e)}async getTestEntityCountByPlanId(e,t,s,n,a,i,r,o){const u={states:s,outcome:n,configurations:a,testers:i,assignedTo:r,entity:o};return this.beginRequest({apiVersion:"6.1-preview.1",routeTemplate:"{project}/_apis/testplan/Count/{planId}",routeValues:{project:e,planId:t},queryParams:u})}async createTestPlan(e,t){return this.beginRequest({apiVersion:"6.1-preview.1",method:"POST",routeTemplate:"{project}/_apis/testplan/Plans/{planId}",routeValues:{project:t},body:e})}async getTestPlanById(e,t){return this.beginRequest({apiVersion:"6.1-preview.1",routeTemplate:"{project}/_apis/testplan/Plans/{planId}",routeValues:{project:e,planId:t}})}async getTestPlans(e,t,s,n,i){const r={owner:t,continuationToken:s,includePlanDetails:n,filterActivePlans:i};return this.beginRequest({apiVersion:"6.1-preview.1",routeTemplate:"{project}/_apis/testplan/Plans/{planId}",routeValues:{project:e},queryParams:r,returnRawResponse:!0}).then((async e=>{const t=await e.text().then(a.deserializeVssJsonObject);return t.continuationToken=e.headers.get("x-ms-continuationtoken"),t}))}async reorderSuiteEntries(e,t,s){return this.beginRequest({apiVersion:"6.1-preview.1",method:"PATCH",routeTemplate:"{project}/_apis/testplan/SuiteEntry/{suiteId}",routeValues:{project:t,suiteId:s},body:e})}async createBulkTestSuites(e,t,s,n){return this.beginRequest({apiVersion:"6.1-preview.1",method:"POST",routeTemplate:"{project}/_apis/testplan/Plans/{planId}/Suites/{parentSuiteId}/bulk",routeValues:{project:t,planId:s,parentSuiteId:n},body:e})}async createTestSuite(e,t,s){return this.beginRequest({apiVersion:"6.1-preview.1",method:"POST",routeTemplate:"{project}/_apis/testplan/Plans/{planId}/Suites/{suiteId}",routeValues:{project:t,planId:s},body:e})}async deleteTestSuite(e,t,s){return this.beginRequest({apiVersion:"6.1-preview.1",method:"DELETE",routeTemplate:"{project}/_apis/testplan/Plans/{planId}/Suites/{suiteId}",routeValues:{project:e,planId:t,suiteId:s}})}async getTestSuitesForPlan(e,t,s,n,i){const r={expand:s,continuationToken:n,asTreeView:i};return this.beginRequest({apiVersion:"6.1-preview.1",routeTemplate:"{project}/_apis/testplan/Plans/{planId}/Suites/{suiteId}",routeValues:{project:e,planId:t},queryParams:r,returnRawResponse:!0}).then((async e=>{const t=await e.text().then(a.deserializeVssJsonObject);return t.continuationToken=e.headers.get("x-ms-continuationtoken"),t}))}async updateTestSuite(e,t,s,n){return this.beginRequest({apiVersion:"6.1-preview.1",method:"PATCH",routeTemplate:"{project}/_apis/testplan/Plans/{planId}/Suites/{suiteId}",routeValues:{project:t,planId:s,suiteId:n},body:e})}async getSuitesByTestCaseId(e){const t={testCaseId:e};return this.beginRequest({apiVersion:"6.1-preview.1",routeTemplate:"_apis/testplan/Suites",queryParams:t})}async addTestCasesToSuite(e,t,s,n){return this.beginRequest({apiVersion:"6.1-preview.3",method:"POST",routeTemplate:"{project}/_apis/testplan/Plans/{planId}/Suites/{suiteId}/TestCase/{testCaseId}",routeValues:{project:t,planId:s,suiteId:n},body:e})}async getTestCase(e,t,s,n,a,i){const r={witFields:a,returnIdentityRef:i};return this.beginRequest({apiVersion:"6.1-preview.3",routeTemplate:"{project}/_apis/testplan/Plans/{planId}/Suites/{suiteId}/TestCase/{testCaseId}",routeValues:{project:e,planId:t,suiteId:s,testCaseId:n},queryParams:r})}async getTestCaseList(e,t,s,n,i,r,o,u,p,l,c){const d={testIds:n,configurationIds:i,witFields:r,continuationToken:o,returnIdentityRef:u,expand:p,excludeFlags:l,isRecursive:c};return this.beginRequest({apiVersion:"6.1-preview.3",routeTemplate:"{project}/_apis/testplan/Plans/{planId}/Suites/{suiteId}/TestCase/{testCaseId}",routeValues:{project:e,planId:t,suiteId:s},queryParams:d,returnRawResponse:!0}).then((async e=>{const t=await e.text().then(a.deserializeVssJsonObject);return t.continuationToken=e.headers.get("x-ms-continuationtoken"),t}))}async removeTestCasesListFromSuite(e,t,s,n){const a={testIds:n};return this.beginRequest({apiVersion:"6.1-preview.3",method:"DELETE",routeTemplate:"{project}/_apis/testplan/Plans/{planId}/Suites/{suiteId}/TestCase/{testCaseId}",routeValues:{project:e,planId:t,suiteId:s},queryParams:a})}async cloneTestCase(e,t){return this.beginRequest({apiVersion:"6.1-preview.2",method:"POST",routeTemplate:"{project}/_apis/testplan/TestCases/CloneTestCaseOperation/{cloneOperationId}",routeValues:{project:t},body:e})}async getTestCaseCloneInformation(e,t){return this.beginRequest({apiVersion:"6.1-preview.2",routeTemplate:"{project}/_apis/testplan/TestCases/CloneTestCaseOperation/{cloneOperationId}",routeValues:{project:e,cloneOperationId:t}})}async cloneTestPlan(e,t,s){const n={deepClone:s};return this.beginRequest({apiVersion:"6.1-preview.2",method:"POST",routeTemplate:"{project}/_apis/testplan/Plans/CloneOperation/{cloneOperationId}",routeValues:{project:t},queryParams:n,body:e})}async getCloneInformation(e,t){return this.beginRequest({apiVersion:"6.1-preview.2",routeTemplate:"{project}/_apis/testplan/Plans/CloneOperation/{cloneOperationId}",routeValues:{project:e,cloneOperationId:t}})}async getPointsList(e,t,s,n,i,r,o,u,p){const l={testPointIds:n,testCaseId:i,continuationToken:r,returnIdentityRef:o,includePointDetails:u,isRecursive:p};return this.beginRequest({apiVersion:"6.1-preview.2",routeTemplate:"{project}/_apis/testplan/Plans/{planId}/Suites/{suiteId}/TestPoint/{pointIds}",routeValues:{project:e,planId:t,suiteId:s},queryParams:l,returnRawResponse:!0}).then((async e=>{const t=await e.text().then(a.deserializeVssJsonObject);return t.continuationToken=e.headers.get("x-ms-continuationtoken"),t}))}async updateTestPoints(e,t,s,n,a,i){const r={includePointDetails:a,returnIdentityRef:i};return this.beginRequest({apiVersion:"6.1-preview.2",method:"PATCH",routeTemplate:"{project}/_apis/testplan/Plans/{planId}/Suites/{suiteId}/TestPoint/{pointIds}",routeValues:{project:t,planId:s,suiteId:n},queryParams:r,body:e})}async cloneTestSuite(e,t,s){const n={deepClone:s};return this.beginRequest({apiVersion:"6.1-preview.2",method:"POST",routeTemplate:"{project}/_apis/testplan/Suites/CloneOperation/{cloneOperationId}",routeValues:{project:t},queryParams:n,body:e})}async getSuiteCloneInformation(e,t){return this.beginRequest({apiVersion:"6.1-preview.2",routeTemplate:"{project}/_apis/testplan/Suites/CloneOperation/{cloneOperationId}",routeValues:{project:e,cloneOperationId:t}})}}t.TestPlan.TestPlanClientName="TestHubRefresh-WebPlatform.ITestPlanRestClient",t.TestPlan.getTestPlanClient=function(e,s){return e.getRestClient(t.TestPlan.TestPlanClientName,s)},s.RestClients.add(t.TestPlan.TestPlanClientName,{factory:i,options:{serviceInstanceType:"00025394-6065-48ca-87d9-7f5672854ef7"}})}(),function(e){t.TestPlanExtended={};class i extends n.RestClientBase{constructor(e){super(e)}async getTestCaseListWithContinuationToken(e,t,s,n,i,o,u,p,l,c,d){const T={testIds:n,configurationIds:i,witFields:o,continuationToken:u,expand:p,returnIdentityRef:l,excludeFlags:c,isRecursive:d};return this.beginRequest({apiVersion:"5.1-preview.2",routeTemplate:"{project}/_apis/testplan/Plans/{planId}/Suites/{suiteId}/TestCase/{testCaseIds}",routeValues:{project:e,planId:t,suiteId:s},queryParams:T,returnRawResponse:!0}).then((e=>{const t=e.headers.get(r);return e.text().then((e=>({results:(0,a.deserializeVssJsonObject)(e),continuationToken:t})))}))}async getPointsListWithContinuationToken(e,t,s,n,i,o,u,p,l){const c={testPointIds:n,testCaseId:i,continuationToken:o,returnIdentityRef:u,includePointDetails:p,isRecursive:l};return this.beginRequest({apiVersion:"5.1-preview.2",routeTemplate:"{project}/_apis/testplan/Plans/{planId}/Suites/{suiteId}/TestPoint/{pointIds}",routeValues:{project:e,planId:t,suiteId:s},queryParams:c,returnRawResponse:!0}).then((e=>{const t=e.headers.get(r);return e.text().then((e=>({results:(0,a.deserializeVssJsonObject)(e),continuationToken:t})))}))}async getPlansListWithContinuationToken(e,t,s,n,i){const o={owner:t,continuationToken:s,includePlanDetails:n,filterActivePlans:i};return this.beginRequest({apiVersion:"5.1-preview.1",routeTemplate:"{project}/_apis/testplan/Plans/{planId}",routeValues:{project:e},queryParams:o,returnRawResponse:!0}).then((e=>{const t=e.headers.get(r);return e.text().then((e=>({results:(0,a.deserializeVssJsonObject)(e),continuationToken:t})))}))}}t.TestPlanExtended.TestPlanClientName="ITestPlanExtendedRestClient",t.TestPlanExtended.getTestPlanExtendedClient=function(e,s){return e.getRestClient(t.TestPlanExtended.TestPlanClientName,s)};const r="x-ms-continuationtoken";s.RestClients.add(t.TestPlanExtended.TestPlanClientName,{factory:i,options:{serviceInstanceType:"00025394-6065-48ca-87d9-7f5672854ef7"}})}()}),["Test","TestPlan","TestPlanExtended"]),document.dispatchEvent(new CustomEvent("scriptLoaded",{cancelable:!1,detail:{id:"ms.vss-test-web.testplan-common-restclient"}}));